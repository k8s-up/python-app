name: Build
on:
    push:
        branches: [master]
jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        permissions:
            packages: write
        outputs:
            version: ${{ steps.set_version.outputs.version }}
        steps:
            - name: Hello
              run: echo Hello GitLab
            - name: Checkout
              uses: actions/checkout@v4
            - name: Install dependencies
              run: pip install -r requirements.txt
            - name: Run test
              run: pytest
              
            - name: Read version file
              run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV
            - name: Log in to the Container registry
              uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1              
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}                
            - name: Build and push Docker image
              id: push
              uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
              with:
                  context: .
                  push: true
                  tags: ghcr.io/${{ github.repository }}:${{env.VERSION}}
            - name: Pass output
              id: set_version
              run: echo "version=${{ env.VERSION }}" >> $GITHUB_OUTPUT

    update-deployment:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout config repo
              uses: actions/checkout@v4
              with:
                repository: k8s-up/python-app-config
                token: ${{ secrets.PYTHON_APP_TOKEN }}
            - name: Read version 
              run: echo "VERSION=${{ needs.build.outputs.version }}" >> $GITHUB_ENV
            - name: Update image tag in YAML
              run: |
                yq e '(.spec.template.spec.containers[] | select(.name == "python-app")).image = "ghcr.io/k8s-up/python-app:${{ env.VERSION }}"' -i dev/deployment-definition.yml
            - run: cat dev/deployment-definition.yml
            - name: Commit and push
              run: |
                git config user.name "CI Bot"
                git config user.email "ci-bot@example.com"
                git commit -am "chore: update image tag to ${{ env.VERSION }}"
                git push

        